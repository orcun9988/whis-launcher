<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAH3P/wMV7jRqcdilEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>